/* 
 * File:   mcal_internal_interrupt.h
 * Author: DELL
 *
 * Created on August 28, 2024, 12:29 AM
 */

#ifndef MCAL_INTERNAL_INTERRUPT_H
#define	MCAL_INTERNAL_INTERRUPT_H

/* Section : Includes*/
#include "mcal_interrupt_cnf.h"
/* Section : Macros Declaration */

/* Section : Function like Macros Declaration*/
/*ADC interrupt*/
#if ADC_INTERRUPT_FEATURE_ENABLE == INTERRUPT_FEATURE_ENABLE 

/* Macro to Enable ADC_INTERNAL_Interrupt*/ 
#define ADC_INTERRUPT_ENABLE()     (PIE1bits.TMR1IE = 1)   
/* Macro to DISable ADC_INTERNAL_Interrupt*/
#define ADC_INTERRUPT_DISABLE()    ( PIE1bits.TMR1IE = 0)
/* Macro to Clear the flag of ADC_INTERNAL_Interrupt*/
#define ADC_INTERRUPT_CLEAR_FLAG() (PIR1bits.TMR1IF = 0)

#if INTERRUPT_PERIOITY_LEVEL_ENABLE == INTERRUPT_FEATURE_ENABLE
/* ENABLE HIGH PRIORITY LEVEL */
#define ADC_INTERRUPT_HIGH_PRIORITY_ENABLE() (IPR1bits.TMR1IP = 1) 

/* ENABLE LOW PRIORITY LEVEL */
#define ADC_INTERRUPT_LOW_PRIORITY_ENABLE() (IPR1bits.TMR1IP = 0)

#endif

#endif
/*Timer0 interrupt*/
#if TIMER0_INTERRUPT_FEATURE_ENABLE == INTERRUPT_FEATURE_ENABLE 

/* Macro to Enable  TIMER0_INTERNAL_Interrupt*/ 
#define TIMER0_INTERRUPT_ENABLE()     (INTCONbits.TMR0IE = 1)   
/* Macro to DISable TIMER0_INTERNAL_Interrupt*/
#define TIMER0_INTERRUPT_DISABLE()    (INTCONbits.TMR0IE = 0)
/* Macro to Clear the flag of TIMER0_INTERNAL_Interrupt*/
#define TIMER0_INTERRUPT_CLEAR_FLAG() (INTCONbits.TMR0IF = 0)

#if INTERRUPT_PERIOITY_LEVEL_ENABLE == INTERRUPT_FEATURE_ENABLE
/* ENABLE HIGH PRIORITY LEVEL */
#define TIMER0_INTERRUPT_HIGH_PRIORITY_ENABLE() (INTCON2bits.TMR0IP = 1) 

/* ENABLE LOW PRIORITY LEVEL */
#define TIMER0_INTERRUPT_LOW_PRIORITY_ENABLE() (INTCON2bits.TMR0IP = 0)

#endif

#endif
/*Timer1 interrupt*/
#if TIMER1_INTERRUPT_FEATURE_ENABLE == INTERRUPT_FEATURE_ENABLE 

/* Macro to Enable  TIMER1_INTERNAL_Interrupt*/ 
#define TIMER1_INTERRUPT_ENABLE()     (PIE1bits.TMR1IE = 1)   
/* Macro to DISable TIMER1_INTERNAL_Interrupt*/
#define TIMER1_INTERRUPT_DISABLE()    (PIE1bits.TMR1IE = 0)
/* Macro to Clear the flag of TIMER1_INTERNAL_Interrupt*/
#define TIMER1_INTERRUPT_CLEAR_FLAG() (PIR1bits.TMR1IF = 0)

#if INTERRUPT_PERIOITY_LEVEL_ENABLE == INTERRUPT_FEATURE_ENABLE
/* ENABLE HIGH PRIORITY LEVEL */
#define TIMER1_INTERRUPT_HIGH_PRIORITY_ENABLE() (IPR1bits.TMR1IP = 1) 

/* ENABLE LOW PRIORITY LEVEL */
#define TIMER1_INTERRUPT_LOW_PRIORITY_ENABLE() (IPR1bits.TMR1IP = 0)

#endif

#endif
/*Timer2 interrupt*/
#if TIMER2_INTERRUPT_FEATURE_ENABLE == INTERRUPT_FEATURE_ENABLE 

/* Macro to Enable  TIMER2_INTERNAL_Interrupt*/ 
#define TIMER2_INTERRUPT_ENABLE()     (PIE1bits.TMR2IE = 1)   
/* Macro to DISable TIMER2_INTERNAL_Interrupt*/
#define TIMER2_INTERRUPT_DISABLE()    (PIE1bits.TMR2IE = 0)
/* Macro to Clear the flag of TIMER2_INTERNAL_Interrupt*/
#define TIMER2_INTERRUPT_CLEAR_FLAG() (PIR1bits.TMR2IF = 0)

#if INTERRUPT_PERIOITY_LEVEL_ENABLE == INTERRUPT_FEATURE_ENABLE
/* ENABLE HIGH PRIORITY LEVEL */
#define TIMER2_INTERRUPT_HIGH_PRIORITY_ENABLE() (IPR1bits.TMR2IP = 1) 

/* ENABLE LOW PRIORITY LEVEL */
#define TIMER2_INTERRUPT_LOW_PRIORITY_ENABLE()  (IPR1bits.TMR2IP = 0)

#endif

#endif

/*Timer3 interrupt*/
#if TIMER3_INTERRUPT_FEATURE_ENABLE == INTERRUPT_FEATURE_ENABLE 

/* Macro to Enable  TIMER3_INTERNAL_Interrupt*/ 
#define TIMER3_INTERRUPT_ENABLE()     (PIE2bits.TMR3IE= 1)   
/* Macro to DISable TIMER3_INTERNAL_Interrupt*/
#define TIMER3_INTERRUPT_DISABLE()    (PIE2bits.TMR3IE = 0)
/* Macro to Clear the flag of TIMER3_INTERNAL_Interrupt*/
#define TIMER3_INTERRUPT_CLEAR_FLAG() (PIR2bits.TMR3IF = 0)

#if INTERRUPT_PERIOITY_LEVEL_ENABLE == INTERRUPT_FEATURE_ENABLE
/* ENABLE HIGH PRIORITY LEVEL */
#define TIMER3_INTERRUPT_HIGH_PRIORITY_ENABLE() (IPR2bits.TMR3IP = 1) 

/* ENABLE LOW PRIORITY LEVEL */
#define TIMER3_INTERRUPT_LOW_PRIORITY_ENABLE()  (IPR2bits.TMR3IP = 0)

#endif

#endif

/*CCP1 interrupt*/
#if CCP1_INTERRUPT_FEATURE_ENABLE == INTERRUPT_FEATURE_ENABLE 

/* Macro to Enable CCP1_INTERNAL_Interrupt*/ 
#define CCP1_INTERRUPT_ENABLE()     (PIE1bits.CCP1IE = 1)   
/* Macro to DISable CCP1_INTERNAL_Interrupt*/
#define CCP1_INTERRUPT_DISABLE()    (PIE1bits.CCP1IE = 0)
/* Macro to Clear the flag of CCP1_INTERNAL_Interrupt*/
#define CCP1_INTERRUPT_CLEAR_FLAG() (PIR1bits.CCP1IF = 0)

#if INTERRUPT_PERIOITY_LEVEL_ENABLE == INTERRUPT_FEATURE_ENABLE
/* ENABLE HIGH PRIORITY LEVEL */
#define CCP1_INTERRUPT_HIGH_PRIORITY_ENABLE() (IPR1bits.CCP1IP = 1) 

/* ENABLE LOW PRIORITY LEVEL */
#define CCP1_INTERRUPT_LOW_PRIORITY_ENABLE()  (IPR1bits.CCP1IP = 0)

#endif

#endif

/*CCP2 interrupt*/
#if CCP2_INTERRUPT_FEATURE_ENABLE == INTERRUPT_FEATURE_ENABLE 

/* Macro to Enable CCP2_INTERNAL_Interrupt*/ 
#define CCP2_INTERRUPT_ENABLE()     (PIE2bits.CCP2IE = 1)   
/* Macro to DISable CCP2_INTERNAL_Interrupt*/
#define CCP2_INTERRUPT_DISABLE()    (PIE2bits.CCP2IE = 0)
/* Macro to Clear the flag of CCP2_INTERNAL_Interrupt*/
#define CCP2_INTERRUPT_CLEAR_FLAG() (PIR2bits.CCP2IF = 0)

#if INTERRUPT_PERIOITY_LEVEL_ENABLE == INTERRUPT_FEATURE_ENABLE
/* ENABLE HIGH PRIORITY LEVEL */
#define CCP2_INTERRUPT_HIGH_PRIORITY_ENABLE() (IPR2bits.CCP2IP = 1) 

/* ENABLE LOW PRIORITY LEVEL */
#define CCP2_INTERRUPT_LOW_PRIORITY_ENABLE()  (IPR2bits.CCP2IP = 0)

#endif

#endif

/*Tx interrupt*/
#if EUSART_Tx_INTERRUPT_FEATURE_ENABLE == INTERRUPT_FEATURE_ENABLE 

/* Macro to Enable TX_INTERNAL_Interrupt*/ 
#define EUSART_Tx_INTERRUPT_ENABLE()     (PIE1bits.TXIE = 1)   
/* Macro to DISable Tx_INTERNAL_Interrupt*/
#define EUSART_Tx_INTERRUPT_DISABLE()    (PIE1bits.TXIE = 0)

#if INTERRUPT_PERIOITY_LEVEL_ENABLE == INTERRUPT_FEATURE_ENABLE
/* ENABLE HIGH PRIORITY LEVEL */
#define EUSART_Tx_INTERRUPT_HIGH_PRIORITY_ENABLE() (IPR1bits.TXIP = 1) 

/* ENABLE LOW PRIORITY LEVEL */
#define EUSART_Tx_INTERRUPT_LOW_PRIORITY_ENABLE()  (IPR1bits.TXIP = 0)

#endif

#endif

/*Rx interrupt*/
#if EUSART_Rx_INTERRUPT_FEATURE_ENABLE == INTERRUPT_FEATURE_ENABLE 

/* Macro to Enable RX_INTERNAL_Interrupt*/ 
#define EUSART_Rx_INTERRUPT_ENABLE()     (PIE1bits.RCIE= 1)   
/* Macro to DISable Rx_INTERNAL_Interrupt*/
#define EUSART_Rx_INTERRUPT_DISABLE()    (PIE1bits.RCIE = 0)

#if INTERRUPT_PERIOITY_LEVEL_ENABLE == INTERRUPT_FEATURE_ENABLE
/* ENABLE HIGH PRIORITY LEVEL */
#define EUSART_Rx_INTERRUPT_HIGH_PRIORITY_ENABLE() (IPR1bits.RCIP = 1) 

/* ENABLE LOW PRIORITY LEVEL */
#define EUSART_Rx_INTERRUPT_LOW_PRIORITY_ENABLE()  (IPR1bits.RCIP = 0)

#endif

#endif

/*MSSP I2C interrupt*/
#if MSSP_I2C_INTERRUPT_FEATURE_ENABLE == INTERRUPT_FEATURE_ENABLE 

/* Macro to Enable I2C_INTERNAL_Interrupt*/ 
#define MSSP_I2C_INTERRUPT_ENABLE()               (PIE1bits.SSPIE = 1)   
#define MSSP_I2C_BUS_COLLISION_INTERRUPT_ENABLE() (PIE2bits.BCLIE = 1) 

/* Macro to DISable I2C_INTERNAL_Interrupt*/
#define MSSP_I2C_INTERRUPT_DISABLE()               (PIE1bits.SSPIE = 0)
#define MSSP_I2C_BUS_COLLISION_INTERRUPT_DISABLE() (PIE2bits.BCLIE = 0)

/* Macro to Clear the flag of I2C_INTERNAL_Interrupt*/
#define MSSP_I2C_INTERRUPT_CLEAR_FLAG()               (PIR1bits.SSPIF = 0)
#define MSSP_I2C_BUS_COLLISION_INTERRUPT_CLEAR_FLAG() (PIR2bits.BCLIF= 0)

#if INTERRUPT_PERIOITY_LEVEL_ENABLE == INTERRUPT_FEATURE_ENABLE

/* ENABLE HIGH PRIORITY LEVEL */
#define MSSP_I2C_INTERRUPT_HIGH_PRIORITY_ENABLE()               (IPR1bits.SSPIP = 1) 
#define MSSP_I2C_BUS_COLLISION_INTERRUPT_HIGH_PRIORITY_ENABLE() (IPR2bits.BCLIP = 1) 

/* ENABLE LOW PRIORITY LEVEL */
#define MSSP_I2C_INTERRUPT_LOW_PRIORITY_ENABLE()               (IPR1bits.SSPIP = 0)
#define MSSP_I2C_BUS_COLLISION_INTERRUPT_LOW_PRIORITY_ENABLE() (IPR2bits.BCLIP = 0)

#endif

#endif
/* Section : User Defined Data Type */

/* Section : Function Declaration */

#endif	/* MCAL_INTERNAL_INTERRUPT_H */

